apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/default-container: alertmanager
  generateName: alertmanager-prometheus-kube-prometheus-alertmanager-
  labels:
    alertmanager: prometheus-kube-prometheus-alertmanager
    app.kubernetes.io/instance: prometheus-kube-prometheus-alertmanager
    app.kubernetes.io/managed-by: prometheus-operator
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/version: 0.27.0
    apps.kubernetes.io/pod-index: "0"
    controller-revision-hash: alertmanager-prometheus-kube-prometheus-alertmanager-7cbc9fffbc
    statefulset.kubernetes.io/pod-name: alertmanager-prometheus-kube-prometheus-alertmanager-0
  name: alertmanager-prometheus-kube-prometheus-alertmanager-0
  namespace: monitoring
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: alertmanager-prometheus-kube-prometheus-alertmanager
    uid: feb21235-defb-404e-8d42-576aa68143a4
spec:
  automountServiceAccountToken: true
  containers:
  - args:
    - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
    - --storage.path=/alertmanager
    - --data.retention=120h
    - --cluster.listen-address=
    - --web.listen-address=:9093
    - --web.external-url=http://prometheus-kube-prometheus-alertmanager.monitoring:9093
    - --web.route-prefix=/
    - --cluster.label=monitoring/prometheus-kube-prometheus-alertmanager
    - --cluster.peer=alertmanager-prometheus-kube-prometheus-alertmanager-0.alertmanager-operated:9094
    - --cluster.reconnect-timeout=5m
    - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    image: quay.io/prometheus/alertmanager:v0.27.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 10
      httpGet:
        path: /-/healthy
        port: http-web
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 3
    name: alertmanager
    ports:
    - containerPort: 9093
      name: http-web
      protocol: TCP
    - containerPort: 9094
      name: mesh-tcp
      protocol: TCP
    - containerPort: 9094
      name: mesh-udp
      protocol: UDP
    readinessProbe:
      failureThreshold: 10
      httpGet:
        path: /-/ready
        port: http-web
        scheme: HTTP
      initialDelaySeconds: 3
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
    resources:
      requests:
        memory: 200Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/alertmanager/config
      name: config-volume
    - mountPath: /etc/alertmanager/config_out
      name: config-out
      readOnly: true
    - mountPath: /etc/alertmanager/certs
      name: tls-assets
      readOnly: true
    - mountPath: /alertmanager
      name: alertmanager-prometheus-kube-prometheus-alertmanager-db
    - mountPath: /etc/alertmanager/web_config/web-config.yaml
      name: web-config
      readOnly: true
      subPath: web-config.yaml
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-xt94n
      readOnly: true
  - args:
    - --listen-address=:8080
    - --reload-url=http://127.0.0.1:9093/-/reload
    - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
    - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
    - --watched-dir=/etc/alertmanager/config
    command:
    - /bin/prometheus-config-reloader
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: SHARD
      value: "-1"
    image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
    imagePullPolicy: IfNotPresent
    name: config-reloader
    ports:
    - containerPort: 8080
      name: reloader-web
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/alertmanager/config
      name: config-volume
      readOnly: true
    - mountPath: /etc/alertmanager/config_out
      name: config-out
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-xt94n
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: alertmanager-prometheus-kube-prometheus-alertmanager-0
  initContainers:
  - args:
    - --watch-interval=0
    - --listen-address=:8081
    - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
    - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
    - --watched-dir=/etc/alertmanager/config
    command:
    - /bin/prometheus-config-reloader
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: SHARD
      value: "-1"
    image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
    imagePullPolicy: IfNotPresent
    name: init-config-reloader
    ports:
    - containerPort: 8081
      name: reloader-web
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/alertmanager/config
      name: config-volume
      readOnly: true
    - mountPath: /etc/alertmanager/config_out
      name: config-out
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-xt94n
      readOnly: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: prometheus-kube-prometheus-alertmanager
  serviceAccountName: prometheus-kube-prometheus-alertmanager
  subdomain: alertmanager-operated
  terminationGracePeriodSeconds: 120
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: config-volume
    secret:
      defaultMode: 420
      secretName: alertmanager-prometheus-kube-prometheus-alertmanager-generated
  - name: tls-assets
    projected:
      defaultMode: 420
      sources:
      - secret:
          name: alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets-0
  - emptyDir:
      medium: Memory
    name: config-out
  - name: web-config
    secret:
      defaultMode: 420
      secretName: alertmanager-prometheus-kube-prometheus-alertmanager-web-config
  - emptyDir: {}
    name: alertmanager-prometheus-kube-prometheus-alertmanager-db
  - name: kube-api-access-xt94n
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
