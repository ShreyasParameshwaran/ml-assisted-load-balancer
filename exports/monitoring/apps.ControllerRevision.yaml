apiVersion: apps/v1
items:
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: alertmanager
          creationTimestamp: null
          labels:
            alertmanager: prometheus-kube-prometheus-alertmanager
            app.kubernetes.io/instance: prometheus-kube-prometheus-alertmanager
            app.kubernetes.io/managed-by: prometheus-operator
            app.kubernetes.io/name: alertmanager
            app.kubernetes.io/version: 0.27.0
        spec:
          automountServiceAccountToken: true
          containers:
          - args:
            - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
            - --storage.path=/alertmanager
            - --data.retention=120h
            - --cluster.listen-address=
            - --web.listen-address=:9093
            - --web.external-url=http://prometheus-kube-prometheus-alertmanager.monitoring:9093
            - --web.route-prefix=/
            - --cluster.label=monitoring/prometheus-kube-prometheus-alertmanager
            - --cluster.peer=alertmanager-prometheus-kube-prometheus-alertmanager-0.alertmanager-operated:9094
            - --cluster.reconnect-timeout=5m
            - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
            env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            image: quay.io/prometheus/alertmanager:v0.27.0
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 10
              httpGet:
                path: /-/healthy
                port: http-web
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            name: alertmanager
            ports:
            - containerPort: 9093
              name: http-web
              protocol: TCP
            - containerPort: 9094
              name: mesh-tcp
              protocol: TCP
            - containerPort: 9094
              name: mesh-udp
              protocol: UDP
            readinessProbe:
              failureThreshold: 10
              httpGet:
                path: /-/ready
                port: http-web
                scheme: HTTP
              initialDelaySeconds: 3
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 3
            resources:
              requests:
                memory: 200Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/alertmanager/config
              name: config-volume
            - mountPath: /etc/alertmanager/config_out
              name: config-out
              readOnly: true
            - mountPath: /etc/alertmanager/certs
              name: tls-assets
              readOnly: true
            - mountPath: /alertmanager
              name: alertmanager-prometheus-kube-prometheus-alertmanager-db
            - mountPath: /etc/alertmanager/web_config/web-config.yaml
              name: web-config
              readOnly: true
              subPath: web-config.yaml
          - args:
            - --listen-address=:8080
            - --reload-url=http://127.0.0.1:9093/-/reload
            - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
            - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
            - --watched-dir=/etc/alertmanager/config
            command:
            - /bin/prometheus-config-reloader
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SHARD
              value: "-1"
            image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
            imagePullPolicy: IfNotPresent
            name: config-reloader
            ports:
            - containerPort: 8080
              name: reloader-web
              protocol: TCP
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/alertmanager/config
              name: config-volume
              readOnly: true
            - mountPath: /etc/alertmanager/config_out
              name: config-out
          dnsPolicy: ClusterFirst
          initContainers:
          - args:
            - --watch-interval=0
            - --listen-address=:8081
            - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
            - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
            - --watched-dir=/etc/alertmanager/config
            command:
            - /bin/prometheus-config-reloader
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SHARD
              value: "-1"
            image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
            imagePullPolicy: IfNotPresent
            name: init-config-reloader
            ports:
            - containerPort: 8081
              name: reloader-web
              protocol: TCP
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/alertmanager/config
              name: config-volume
              readOnly: true
            - mountPath: /etc/alertmanager/config_out
              name: config-out
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          serviceAccount: prometheus-kube-prometheus-alertmanager
          serviceAccountName: prometheus-kube-prometheus-alertmanager
          terminationGracePeriodSeconds: 120
          volumes:
          - name: config-volume
            secret:
              defaultMode: 420
              secretName: alertmanager-prometheus-kube-prometheus-alertmanager-generated
          - name: tls-assets
            projected:
              defaultMode: 420
              sources:
              - secret:
                  name: alertmanager-prometheus-kube-prometheus-alertmanager-tls-assets-0
          - emptyDir:
              medium: Memory
            name: config-out
          - name: web-config
            secret:
              defaultMode: 420
              secretName: alertmanager-prometheus-kube-prometheus-alertmanager-web-config
          - emptyDir: {}
            name: alertmanager-prometheus-kube-prometheus-alertmanager-db
  kind: ControllerRevision
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
      prometheus-operator-input-hash: "9387997950498179556"
    labels:
      alertmanager: prometheus-kube-prometheus-alertmanager
      app.kubernetes.io/instance: prometheus-kube-prometheus-alertmanager
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: 0.27.0
      controller.kubernetes.io/hash: 7cbc9fffbc
    name: alertmanager-prometheus-kube-prometheus-alertmanager-7cbc9fffbc
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-prometheus-kube-prometheus-alertmanager
      uid: a2e4a38e-37ec-4384-8c91-20f560be145b
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: prometheus
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: prometheus-kube-prometheus-prometheus
            app.kubernetes.io/managed-by: prometheus-operator
            app.kubernetes.io/name: prometheus
            app.kubernetes.io/version: 2.53.1
            operator.prometheus.io/name: prometheus-kube-prometheus-prometheus
            operator.prometheus.io/shard: "0"
            prometheus: prometheus-kube-prometheus-prometheus
        spec:
          automountServiceAccountToken: true
          containers:
          - args:
            - --web.console.templates=/etc/prometheus/consoles
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
            - --web.enable-lifecycle
            - --web.external-url=http://prometheus-kube-prometheus-prometheus.monitoring:9090
            - --web.route-prefix=/
            - --storage.tsdb.retention.time=10d
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.wal-compression
            - --web.config.file=/etc/prometheus/web_config/web-config.yaml
            image: quay.io/prometheus/prometheus:v2.53.1
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 6
              httpGet:
                path: /-/healthy
                port: http-web
                scheme: HTTP
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 3
            name: prometheus
            ports:
            - containerPort: 9090
              name: http-web
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /-/ready
                port: http-web
                scheme: HTTP
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 3
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            startupProbe:
              failureThreshold: 60
              httpGet:
                path: /-/ready
                port: http-web
                scheme: HTTP
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 3
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/prometheus/config_out
              name: config-out
              readOnly: true
            - mountPath: /etc/prometheus/certs
              name: tls-assets
              readOnly: true
            - mountPath: /prometheus
              name: prometheus-prometheus-kube-prometheus-prometheus-db
            - mountPath: /etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
              name: prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
            - mountPath: /etc/prometheus/web_config/web-config.yaml
              name: web-config
              readOnly: true
              subPath: web-config.yaml
          - args:
            - --listen-address=:8080
            - --reload-url=http://127.0.0.1:9090/-/reload
            - --config-file=/etc/prometheus/config/prometheus.yaml.gz
            - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
            - --watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
            command:
            - /bin/prometheus-config-reloader
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SHARD
              value: "0"
            image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
            imagePullPolicy: IfNotPresent
            name: config-reloader
            ports:
            - containerPort: 8080
              name: reloader-web
              protocol: TCP
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/prometheus/config
              name: config
            - mountPath: /etc/prometheus/config_out
              name: config-out
            - mountPath: /etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
              name: prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
          dnsPolicy: ClusterFirst
          initContainers:
          - args:
            - --watch-interval=0
            - --listen-address=:8081
            - --config-file=/etc/prometheus/config/prometheus.yaml.gz
            - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
            - --watched-dir=/etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
            command:
            - /bin/prometheus-config-reloader
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SHARD
              value: "0"
            image: quay.io/prometheus-operator/prometheus-config-reloader:v0.75.2
            imagePullPolicy: IfNotPresent
            name: init-config-reloader
            ports:
            - containerPort: 8081
              name: reloader-web
              protocol: TCP
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/prometheus/config
              name: config
            - mountPath: /etc/prometheus/config_out
              name: config-out
            - mountPath: /etc/prometheus/rules/prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
              name: prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          serviceAccount: prometheus-kube-prometheus-prometheus
          serviceAccountName: prometheus-kube-prometheus-prometheus
          shareProcessNamespace: false
          terminationGracePeriodSeconds: 600
          volumes:
          - name: config
            secret:
              defaultMode: 420
              secretName: prometheus-prometheus-kube-prometheus-prometheus
          - name: tls-assets
            projected:
              defaultMode: 420
              sources:
              - secret:
                  name: prometheus-prometheus-kube-prometheus-prometheus-tls-assets-0
          - emptyDir:
              medium: Memory
            name: config-out
          - configMap:
              defaultMode: 420
              name: prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
            name: prometheus-prometheus-kube-prometheus-prometheus-rulefiles-0
          - name: web-config
            secret:
              defaultMode: 420
              secretName: prometheus-prometheus-kube-prometheus-prometheus-web-config
          - emptyDir: {}
            name: prometheus-prometheus-kube-prometheus-prometheus-db
  kind: ControllerRevision
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
      prometheus-operator-input-hash: "10052739302978650686"
    labels:
      app.kubernetes.io/instance: prometheus-kube-prometheus-prometheus
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/version: 2.53.1
      controller.kubernetes.io/hash: 545cdf7b5b
      operator.prometheus.io/name: prometheus-kube-prometheus-prometheus
      operator.prometheus.io/shard: "0"
      prometheus: prometheus-kube-prometheus-prometheus
    name: prometheus-prometheus-kube-prometheus-prometheus-545cdf7b5b
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-prometheus-kube-prometheus-prometheus
      uid: 91af8eeb-9308-43f5-8770-ded9844882d5
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          creationTimestamp: null
          labels:
            app.kubernetes.io/component: metrics
            app.kubernetes.io/instance: prometheus
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: prometheus-node-exporter
            app.kubernetes.io/part-of: prometheus-node-exporter
            app.kubernetes.io/version: 1.8.2
            helm.sh/chart: prometheus-node-exporter-4.37.3
            jobLabel: node-exporter
            release: prometheus
        spec:
          automountServiceAccountToken: false
          containers:
          - args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --path.udev.data=/host/root/run/udev/data
            - --web.listen-address=[$(HOST_IP)]:9100
            - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
            - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
            env:
            - name: HOST_IP
              value: 0.0.0.0
            image: quay.io/prometheus/node-exporter:v1.8.2
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 9100
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: node-exporter
            ports:
            - containerPort: 9100
              name: http-metrics
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 9100
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources: {}
            securityContext:
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /host/proc
              name: proc
              readOnly: true
            - mountPath: /host/sys
              name: sys
              readOnly: true
            - mountPath: /host/root
              mountPropagation: HostToContainer
              name: root
              readOnly: true
          dnsPolicy: ClusterFirst
          hostNetwork: true
          hostPID: true
          nodeSelector:
            kubernetes.io/os: linux
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 65534
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccount: prometheus-prometheus-node-exporter
          serviceAccountName: prometheus-prometheus-node-exporter
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            operator: Exists
          volumes:
          - hostPath:
              path: /proc
              type: ""
            name: proc
          - hostPath:
              path: /sys
              type: ""
            name: sys
          - hostPath:
              path: /
              type: ""
            name: root
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.8.2
      controller-revision-hash: 7f4c7cc867
      helm.sh/chart: prometheus-node-exporter-4.37.3
      jobLabel: node-exporter
      release: prometheus
    name: prometheus-prometheus-node-exporter-7f4c7cc867
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: prometheus-prometheus-node-exporter
      uid: c585caab-48f3-4e8c-8cd9-32c7e91115ad
  revision: 1
kind: ControllerRevisionList
